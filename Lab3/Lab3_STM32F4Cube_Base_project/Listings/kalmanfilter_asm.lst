


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             text, CODE, READONLY
    2 00000000                 EXPORT           Kalmanfilter_asm
    3 00000000         
    4 00000000         ; function Kalmanfilter_asm
    5 00000000         ; inputs:
    6 00000000         ; -------
    7 00000000         ; R0: pointer to the input (float *)
    8 00000000         ; R1: pointer to filtered data array (float *)
    9 00000000         ; R2: length of array (number of floats in array)
   10 00000000         ; R3: pointer to Kalman filter state (struct kalman_stat
                       e *)
   11 00000000         ;
   12 00000000         ; outputs:
   13 00000000         ; --------
   14 00000000         ; R0: 0 if successful, 1 if failed due to overflow (int)
                       
   15 00000000         Kalmanfilter_asm
   16 00000000 B470            PUSH             {R4-R6}
   17 00000002 ED93 0A00       VLDR.f32         S0, [R3]    ; q
   18 00000006 EDD3 0A01       VLDR.f32         S1, [R3, #4] ; r
   19 0000000A ED93 1A02       VLDR.f32         S2, [R3, #8] ; x
   20 0000000E EDD3 1A03       VLDR.f32         S3, [R3, #12] ; p
   21 00000012 ED93 2A04       VLDR.f32         S4, [R3, #16] ; k
   22 00000016 F04F 0400       MOV              R4, #0      ; index = 0
   23 0000001A 460D            MOV              R5, R1      ; current address i
                                                            n filtered
   24 0000001C 4606            MOV              R6, R0      ; current address i
                                                            n input array
   25 0000001E         
   26 0000001E EA4F 0482       LSL              R4, R2, #2
   27 00000022 442C            ADD              R4, R4, R5
   28 00000024         
   29 00000024         loop
   30 00000024 42AC            CMP              R4, R5
   31 00000026 D016            BEQ              end_loop
   32 00000028 EE71 1A80       VADD.f32         S3, S3, S0  ; p = p + q
   33 0000002C EE71 2AA0       VADD.f32         S5, S3, S1  ; p + r
   34 00000030 EE81 2AA2       VDIV.f32         S4, S3, S5  ; k = p / (p + r)
   35 00000034 EDD6 2A00       VLDR.f32         S5, [R6]    ; read measurement 
                                                            at index
   36 00000038 EE72 2AC1       VSUB.f32         S5, S5, S2  ; measurement - x
   37 0000003C EE62 2A82       VMUL.f32         S5, S5, S4  ; k * (measurement 
                                                            - x)
   38 00000040 EE31 1A22       VADD.f32         S2, S2, S5  ; x = x + k * (meas
                                                            urement - x)
   39 00000044 ED85 1A00       VSTR.f32         S2, [R5]    ; store filtered x 
                                                            in array
   40 00000048 EE62 1A20       VMUL.f32         S3, S4, S1  ; p = k * r = (1 - 
                                                            p/(p+r)) * p = (1 -
                                                             k) * p
   41 0000004C F105 0504       ADD              R5, R5, #4  ; output array: the
                                                             address in bytes i
                                                            ncrements by 4
   42 00000050 F106 0604       ADD              R6, R6, #4  ; input array : the
                                                             address in bytes i
                                                            ncrements by 4
   43 00000054 E7E6            B                loop
   44 00000056         
   45 00000056         end_loop



ARM Macro Assembler    Page 2 


   46 00000056         
   47 00000056 ED83 0A00       VSTR.f32         S0, [R3]    ; q
   48 0000005A EDC3 0A01       VSTR.f32         S1, [R3, #4] ; r
   49 0000005E ED83 1A02       VSTR.f32         S2, [R3, #8] ; x
   50 00000062 EDC3 1A03       VSTR.f32         S3, [R3, #12] ; p
   51 00000066 ED83 2A04       VSTR.f32         S4, [R3, #16] ; k
   52 0000006A         
   53 0000006A EEF1 0A10       VMRS             R0, FPSCR
   54 0000006E F000 000F       AND              R0, #0x0F
   55 00000072         
   56 00000072 BC70            POP              {R4-R6}
   57 00000074 4770            BX               LR          ; return 0
   58 00000076         
   59 00000076         error
   60 00000076 F04F 0001       MOV              R0, #1
   61 0000007A BC70            POP              {R4-R6}
   62 0000007C 4770            BX               LR          ; return 1
   63 0000007E                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\kalmanfilter_asm.d -o.\objects\kalmanfilter_asm.o -I"
H:\My Documents\Microprocessor Systems\MicroP_Labs\Lab3\Lab3_STM32F4Cube_Base_p
roject\RTE" -I"H:\My Documents\Microprocessor Systems\MicroP_Labs\Lab3\Lab3_STM
32F4Cube_Base_project\RTE\Device\STM32F407VGTx" -IC:\Keil_v5\ARM\PACK\ARM\CMSIS
\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.7.0\Drivers\CMS
IS\Device\ST\STM32F4xx\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.7.0\D
rivers\STM32F4xx_HAL_Driver\Inc --predefine="__MICROLIB SETA 1" --predefine="__
UVISION_VERSION SETA 515" --predefine="_RTE_ SETA 1" --predefine="STM32F407xx S
ETA 1" --list=.\listings\kalmanfilter_asm.lst Sources\Kalmanfilter_asm.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Kalmanfilter_asm 00000000

Symbol: Kalmanfilter_asm
   Definitions
      At line 15 in file Sources\Kalmanfilter_asm.s
   Uses
      At line 2 in file Sources\Kalmanfilter_asm.s
Comment: Kalmanfilter_asm used once
end_loop 00000056

Symbol: end_loop
   Definitions
      At line 45 in file Sources\Kalmanfilter_asm.s
   Uses
      At line 31 in file Sources\Kalmanfilter_asm.s
Comment: end_loop used once
error 00000076

Symbol: error
   Definitions
      At line 59 in file Sources\Kalmanfilter_asm.s
   Uses
      None
Comment: error unused
loop 00000024

Symbol: loop
   Definitions
      At line 29 in file Sources\Kalmanfilter_asm.s
   Uses
      At line 43 in file Sources\Kalmanfilter_asm.s
Comment: loop used once
text 00000000

Symbol: text
   Definitions
      At line 1 in file Sources\Kalmanfilter_asm.s
   Uses
      None
Comment: text unused
5 symbols
340 symbols in table
